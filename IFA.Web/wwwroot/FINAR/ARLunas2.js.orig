var InvoiceDS = [];
var InvoiceList = [];
var columnGrid = [
    { field: "no_trans", title: "No Invoice", width: "50px", editor: invoiceDropDownEditor },
    { field: "jml_tagihan", title: "Jml. Tagihan", editor: jmltagihanLabel, attributes: { class: "text-right ", 'style': 'background-color: darkseagreen; color:black;' }, width: "50px", format: "{0:#,0}", attributes: { class: "text-right " } },
    { field: "jml_bayar", title: "Jml. Bayar", editor: bayarNumeric, attributes: { class: "text-right ", 'style': 'background-color: darkseagreen; color:black;' }, width: "50px", format: "{0:#,0}", attributes: { class: "text-right " } },
    { field: "jml_diskon", title: "Jml. Potongan", editor: potongan, attributes: { class: "text-right ", 'style': 'background-color: darkseagreen; color:black;' }, width: "30px", format: "{0:#,0}", attributes: { class: "text-right " } },
    { field: "jml_pembulatan", title: "Jml. Pembulatan", editor: pembulatan, attributes: { class: "text-right ", 'style': 'background-color: darkseagreen; color:black;' }, width: "30px", format: "{0:#,0}", attributes: { class: "text-right " } },
    { field: "pendp_lain", title: "Pendapatan Lain", editor: pendapatanlain, attributes: { class: "text-right ", 'style': 'background-color: darkseagreen; color:black;' }, width: "30px", format: "{0:#,0}", attributes: { class: "text-right " } },
    { field: "subtotal", title: "Sub Total", editor: subtotal, width: "30px", format: "{0:#,0}", attributes: { class: "text-right " }, aggregates: ["sum"], footerTemplate: "<div align=right>#= kendo.toString(sum, \"n0\") #</div>" },
    { command: ["edit", "destroy"], title: "Actions", width: "20px" }
];
var optionsGrid = {
    pageSize: 10
};

$(document).ready(function () {
    startSpinner('Loading..', 1);
    $.when(
        getCustomer(),
        getValuta(),
        getJnsBayar(),
        getRekeningBank(),
        getGiro()
    ).done(function () {
        bindGrid();
        startSpinner('Loading..', 0);
    });
    $("#STransferTunai").val(0);
    $("#TfTunai").val(0);
    $("#GT").val(0);

    $('#divtanggal').datepicker({
        format: 'dd MM yyyy',
        todayBtn: 'linked',
        "autoclose": true
    }).on('changeDate', function (selected) {
        var minDate = new Date(selected.date.valueOf());
        $('#tanggalfrom').datepicker('setStartDate', minDate);
    });

    $(".decimalKendo").kendoNumericTextBox({
        decimals: 1
    });

    hide();
    $("#JnsPembayaran").change(function () {
        var val = this.value;
        hide();
        
        if (val == "04") { //Transfer
            $("#DivTF").show();
            //$("#DivNoGiroCek").show();
            $("#DivBank").show();
            $('#addNew').show();
            $("#DivNoGiroCek").hide();
        } else if (val == "01") { //Giro Cek
            $("#DivNoGiroCek").show();
            $("#DivGiroCek").show();
            $('#addNew').show();
            $("#DivBank").hide();
        } else if (val == "03") {//Tunai
            $("#DivTF").show();
           // $("#DivNoGiroCek").show();
            $('#addNew').show();
            $("#DivBank").hide();
            $("#DivNoGiroCek").hide();
        } else if (val == "") {
            $('#addNew').hide();
            $("#DivBank").hide();
            $("#DivNoGiroCek").hide();
        }
    });

    $('body').on('keydown', 'input, select, span, .k-dropdown', function (e) {
        if (e.key === "Enter") {

            var self = $(this), form = self.parents('form:eq(0)'), focusable, next;
            focusable = form.find('input,a,select,button,textarea, .k-dropdown').filter(':visible');
            next = focusable.eq(focusable.index(this) + 1);
            next.focus();
            return false;
        }
    });

    $(document).on('keydown', function (event) {
        if (event.key == "F2") {
            onAddNewRow();
            return false;
        }
    });

    $("#TfTunai").on("change", function (event) {
        $("#STransferTunai").data("kendoNumericTextBox").value(this.value);
    });
});

function hide() {
    $('#addNew').hide();
    $("#DivNoGiroCek").hide();
    $("#DivGiroCek").hide();
    $("#DivTF").hide();
    $("#DivBank").hide();

    $("#TfGiro").val('');
    $("#STransferGiro").val('');
    $("#NoGiro").val('');
    $("#TfTunai").val('');
    $("#STransferTunai").data("kendoNumericTextBox").value('');
    $("#DivBank").val('');
}

function getCustomer() {
    return $.ajax({
        type: "POST",
        cache: false,
        url: urlGetCustomer,
        success: function (data) {
            $("#Kd_Customer").empty();
            $("#Kd_Customer").append('<option value="" selected disabled>Please select</option>');
            for (var i = 0; i < data.length; i++) {
                $("#Kd_Customer").append('<option value="' + data[i].kd_Customer + '">' + data[i].nama_Customer + '</option>');
            }
            $('#Kd_Customer').selectpicker('refresh');
        },
        error: function (data) {
            alert('Something Went Wrong');
            startSpinner('loading..', 0);
        }
    });
}

function getValuta() {
    return $.ajax({
        type: "POST",
        cache: false,
        url: urlGetValuta,
        success: function (data) {
            $("#valuta").empty();
            $("#valuta").append('<option value="" selected disabled>Please select</option>');
            for (var i = 0; i < data.length; i++) {
                $("#valuta").append('<option value="' + data[i].kode_Valuta + '">' + data[i].nama_Valuta + '</option>');
            }
            $('select[name=valuta]').val('IDR');
            $('#valuta').selectpicker('refresh');
        },
        error: function (data) {
            alert('Something Went Wrong');
            startSpinner('loading..', 0);
        }
    });
}

function getJnsBayar() {
    return $.ajax({
        type: "POST",
        cache: false,
        url: urlGetJnsBayar,
        success: function (data) {
            $("#JnsPembayaran").empty();
            $("#JnsPembayaran").append('<option value="" selected disabled>Please select</option>');
            for (var i = 0; i < data.length; i++) {
                $("#JnsPembayaran").append('<option value="' + data[i].id_Data + '">' + data[i].desc_Data + '</option>');
            }

            $('#JnsPembayaran').selectpicker('refresh');
        },
        error: function (data) {
            alert('Something Went Wrong');
            startSpinner('loading..', 0);
        }
    });
}

function getRekeningBank() {
    return $.ajax({
        url: urlGetRekBank,
        success: function (data) {
            $("#Bank").empty();
            $("#Bank").append('<option value="" selected disabled>Please select</option>');
            for (var i = 0; i < data.length; i++) {
                $("#Bank").append('<option value="' + data[i].kd_bank + '">' + data[i].nama_bank + '</option>');
            }
            $('#Bank').selectpicker('refresh');
        },
        error: function (data) {
            alert('Something Went Wrong');
            startSpinner('loading..', 0);
        }
    });
}

function getGiro() {
    var KodeCabang = null;
    var KodeCustomer = null;
    var Nomor = null;
    return $.ajax({
        url: urlGetGiro,
        data: { kdcb: KodeCabang, kdcust: KodeCustomer, nomor: Nomor },
        success: function (data) {
            $("#NoGiro").empty();
            $("#NoGiro").append('<option value="" selected disabled>Please select</option>');
            for (var i = 0; i < data.length; i++) {
                $("#NoGiro").append('<option value="' + data[i].kd_bank + '">' + data[i].nama_bank + '</option>');
            }

            $('#NoGiro').selectpicker('refresh');
        },
        error: function (data) {
            alert('Something Went Wrong');
            startSpinner('loading..', 0);
        }
    });
}

function bindGrid() {
    _GridDO = $("#GridStokOpname").kendoGrid({
        columns: columnGrid,
        dataSource: {
            data: InvoiceDS,
            schema: {
                model: {
                    fields: {
                        no_trans: { type: "string", editable: true },
                        jml_tagihan: { type: "number", editable: true },
                        jml_bayar: { type: "number", editable: true },
                        jml_diskon: { type: "number", editable: true },
                        jml_pembulatan: { type: "number", editable: true },
                        pendp_lain: { type: "number", editable: true },
                        subtotal: { type: "number", editable: true }
                    }
                }
            },
            aggregate: [
                { field: "subtotal", aggregate: "sum" }
            ]
        },
        edit: function (e) {
            $("#tagihan").text(e.model.jml_tagihan);
            var jmlbayar = $("#jml_bayar").data("kendoNumericTextBox");
            jmlbayar.value(e.model.jml_bayar);
            $("#potongan").text(e.model.jml_diskon);
            $("#pembulatan").text(e.model.jml_pembulatan);
            $("#pendapatanlain").text(e.model.pendp_lain);

            if (e.model.no_trans != "") {
                var explode = function () {
                    var noinv = $("#no_inv").data("kendoDropDownList");
                    var invIndex = InvoiceList.findIndex(x => x.no_inv == e.model.no_inv);
                    noinv.select(invIndex + 1);
                };

                setTimeout(explode, 500);
            }
            
        },
        save: function (e) {
            var grid = $("#GridStokOpname").data("kendoGrid");
            var ds = grid.dataSource.data().toJSON();
            var TotalTF = $("#TfTunai").val() > 0 ? $("#TfTunai").val() : $("#TfGiro").val();
            var GrandTotal = 0;
            var GrandTagihan = 0;
            for (var i = 0; i <= ds.length - 1; i++) {
                ds[i].subtotal = ds[i].jml_bayar;
                GrandTotal += ds[i].subtotal;
                GrandTagihan += ds[i].jml_tagihan;
            }
            InvoiceDS = ds;

            $("#JumlahTotalBayar").val(ds.length);
            $("#JumlahNominalBayar").val(GrandTotal);
            $("#JumlahNominalTagihan").val(GrandTagihan);
            $("#GT").val(GrandTotal);
            if ($("#TfTunai").val() > 0) {
<<<<<<< HEAD
                $("#STransferTunai").data("kendoNumericTextBox").value(TotalTF - GrandTotal);
=======
                $("#STransferTunai").val(TotalTF - GrandTotal);
                var numeric = $("#STransferTunai").getKendoNumericTextBox();
                numeric.focus();
                var numeric1 = $("#GT").getKendoNumericTextBox();
                numeric1.focus();
>>>>>>> dev_arif
            } else {
                $("#STransferGiro").val(TotalTF - GrandTotal);
                var numeric = $("#STransferGiro").getKendoNumericTextBox();
                numeric.focus();
                var numeric1 = $("#GT").getKendoNumericTextBox();
                numeric1.focus();
            }

            $('#GridStokOpname').kendoGrid('destroy').empty();
            bindGrid();
            //ItemCalc();
            onAddNewRow();
        },
        cancel: function (e) {
            $('#GridStokOpname').data('kendoGrid').dataSource.cancelChanges();
        },
        dataBinding: function (e) {
           
        },
        noRecords: true,
        editable: "inline",
        dataBound: onDataBound
    }).data("kendoGrid");
}

function onDataBound(e) {
    addCustomCssButtonCommand();
}

function addCustomCssButtonCommand() {
    $(".k-grid-edit").removeClass("k-button k-button-icontext ");
    $(".k-grid-edit").addClass("btn btn-info colorWhite marginRight10 font10 padding79");
    $('.k-grid-edit').find('span').remove();

    $(".k-grid-delete").removeClass("k-button k-button-icontext");
    $(".k-grid-delete").addClass("btn btn-danger colorWhite  font10 padding79");
    $('.k-grid-delete').find('span').remove();

    $(".k-grid-update").removeClass("k-button k-primary k-button-icontext");
    $(".k-grid-update").addClass("btn btn-info colorWhite marginRight10 font10 padding79");
    $('.k-grid-update').find('span').remove();

    $(".k-grid-cancel").removeClass("k-button k-button-icontext");
    $(".k-grid-cancel").addClass("btn btn-danger colorWhite  font10 padding79");
    $('.k-grid-cancel').find('span').remove();
}

function setsisa() {
    var tunai = $("#TfTunai").val();
    var tottunaigrid = $("#GT").val();
    var sisa = tunai - tottunaigrid;
    $("#STransferTunai").val(sisa);
}
function setsisagiro() {
    var tunai = $("#TfGiro").val();
    var tottunaigrid = $("#GT").val();
    var sisa = tunai - tottunaigrid;
    $("#STransferGiro").val(sisa);
}

function onAddNewRow() {
    $.when(GetInvoice()).done(function () {
        var grid = $("#GridStokOpname").data("kendoGrid");
        grid.addRow();
        //$('#no_inv').data("kendoDropDownList").open();

    });
}

function jmltagihanLabel(container, options) {
    var input = $('<label id="tagihan" />');
    input.appendTo(container);
}

function potongan(container, options) {
    var input = $('<label id="potongan" />');
    input.appendTo(container);
}

function pembulatan(container, options) {
    var input = $('<label id="pembulatan" />');
    input.appendTo(container);
}

function pendapatanlain(container, options) {
    var input = $('<label id="pendapatanlain" />');
    input.appendTo(container);
}

function subtotal(container, options) {
    var input = $('<label id="subtotal" />');
    input.appendTo(container);
}

function bayarNumeric(container, options) {
    var input = $('<input id="jml_bayar" />');
    input.appendTo(container);

    input.kendoNumericTextBox({
        format: "{0:n2}",
        decimals: 2,
        min: 0,
        change: function (e) {
            var value = this.value();
            var invoice = _GridDO.dataItem($(e.sender.element).closest("tr"));
            invoice.jml_bayar = value;
            invoice.no_trans = $("#no_inv").val();
            invoice.jml_tagihan = $("#tagihan").text();
            invoice.jml_diskon = $("#potongan").text();
            invoice.jml_pembulatan = $("#pembulatan").text();
            invoice.pendp_lain = $("#pendapatanlain").text();

            var tagihan = invoice.jml_tagihan;
            var potongan = invoice.jml_diskon;
            var pembulatan = invoice.jml_pembulatan;
            var pendapatanlain = invoice.pendp_lain;
            var subtotal = (tagihan - potongan - pembulatan - pendapatanlain) - value;
            $("#subtotal").text(value);
        }
    });
}


function onCustomerChanged() {
    $("#GridStokOpname").data("kendoGrid").dataSource.data([]);
}


function GetInvoice() {
    InvoiceList = [];
    var filterdata = {
        kdcustomer: $("#Kd_Customer").val(),
        kdvaluta: $("#valuta").val(),
    };
    return $.ajax({
        url: urlInvoice,
        type: "POST",
        data: filterdata,
        success: function (result) {
            InvoiceList = result;
            console.log(InvoiceList);
        },
        error: function (data) {
            alert('Something Went Wrong');
            startSpinner('loading..', 0);
        }
    });
}

function invoiceDropDownEditor(container, options) {
    var input = $('<input required id="no_inv" name="no_inv">');
    input.appendTo(container);
    input.kendoMultiColumnComboBox({
        valuePrimitive: true,
        dataTextField: "no_inv",
        dataValueField: "no_inv",
        columns: [
            {
                field: "no_inv",
                title: "No Invoice",
                width: 200
            },
            {
                field: "tgl_inv",
                title: "Tgl. Invoice",
                template: "#= dateTime(data.tgl_inv)#",
                width: 200
            },
            {
                field: "tgl_jth_tempo",
                title: "Tgl. Jatuh Tempo",
                template: "#= dateTime(data.tgl_jth_tempo)#",
                width: 200
            },
            {
                field: "jml_tagihan",
                title: "Jml. Tagihan",
                template: "#= currency(data.jml_tagihan)#",
                width: 200
            },
        ],
        dataSource: InvoiceList,
        filter: "contains",
        optionLabel: "Pilih Invoice",
        virtual: {
            valueMapper: function (options) {
                options.success([options.success || 0]);
            }
        },
        template: "<span data-id='${data.no_inv}' data-inv='${data.no_inv}' data-tagihan='${data.jml_tagihan}' data-diskon='${data.jml_diskon}' data-pembulatan='0' data-pendapatanlain='${data.jml_pend_lain}'>${data.no_inv}</span>",
        select: function (e) {
            var id = e.dataItem.no_inv;
            var Invoice = e.dataItem.no_inv;
            var JmlTagihan = e.dataItem.jml_tagihan;
            var Diskon = e.dataItem.Diskon;
            var Pembulatan = e.dataItem.jml_diskon;
            var PendapatanLain = e.dataItem.PendapatanLain;
            var invoice = _GridDO.dataItem($(e.sender.element).closest("tr"));
            invoice.no_trans = Invoice;
            invoice.jml_tagihan = JmlTagihan >= 0 ? JmlTagihan : 0;
            invoice.jml_diskon = Diskon >= 0 ? Diskon : 0;
            invoice.jml_pembulatan = Pembulatan >= 0 ? Pembulatan : 0;
            invoice.pendp_lain = PendapatanLain >= 0 ? PendapatanLain : 0;
            
            JmlTagihan >= 0 ? $("#tagihan").text(formatNumber(JmlTagihan)) : $("#tagihan").text('0');
            Diskon >= 0 ? $("#potongan").text(Diskon) : $("#potongan").text('0');
            Pembulatan >= 0 ? $("#pembulatan").text(Pembulatan) : $("#pembulatan").text('0')
            PendapatanLain >= 0 ? $("#pendapatanlain").text(PendapatanLain) : $("#pendapatanlain").text('0');
            var subtotal = (invoice.jml_tagihan - invoice.jml_diskon - invoice.jml_pembulatan - invoice.pendp_lain);
            invoice.subtotal = subtotal >= 0 ? subtotal : 0;

            //subtotal >= 0 ? $("#subtotal").text(subtotal) : $("#subtotal").text('0');
            $("#subtotal").text(0);
            
        }
    });
}

function formatNumber(num) {
    return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
}

function currency(data) {
    return kendo.toString(data, "Rp ##,##.00");
}

function dateTime(data) {
    return kendo.toString(kendo.parseDate(data.substring(0, 10)), "dd/MM/yyyy");
}

function onSaveClicked()
{
    validationPage();
}

function validationPage() {
    console.log("GT: " + $("#GT").val());
    console.log("JNS: " + $("#JnsPembayaran").val());
    console.log("TF: " + $("#TfTunai").val());
    console.log("SISA: " + $("#STransferTunai").val());


    if ($("#GT").val() > 0 && $("#JnsPembayaran").val() == "03" && $("#TfTunai").val() > 0 && $("#STransferTunai").val() == 0) {
        SaveData();

    } else if ($("#GT").val() > 0 && $("#JnsPembayaran").val() == "04" && $("#TfTunai").val() > 0 && $("#STransferTunai").val() == 0 && $("Bank").val() != "") {
        SaveData();

    } else if ($("#GT").val() > 0 && $("#JnsPembayaran").val() == "01" && $("#TfGiro").val() > 0 && $("#STransferGiro").val() == 0) {
        SaveData();

    } else {
        swal({
            type: 'warning',
            title: 'Error Sisa Transfer',
            html: 'Sisa Transfer Tidak Boleh Lebih atau Kurang dari 0',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d9534f'
        })
    }
}

function SaveData() {

    var SP_REFFval;
    urlSaveData = urlSave;
    var savedata = {
        Kd_cabang: "",
        tgl_trans: $("#tanggalfrom").val(),

        no_ref1: $("#NoReferensi").val(),
        no_ref2: "",
        no_ref3: "",
        thnbln: "",
        kd_kartu: $("#Kd_Customer").val(),
        kd_valuta: $("#valuta").val(),
        kurs_valuta: $("#kurs").val(),
        jml_val_trans: $("#GT").val(),
        jml_rp_trans: $("#GT").val(),
        jml_tagihan: $("#JumlahNominalTagihan").val(),
        jml_bayar: $("#JumlahTotalBayar").val(),
        Jns_bayar: $("#JnsPembayaran").val(),
        jns_giro_trans: "",
        no_giro: $("#NoGiro").val(),
        kd_bank: $("#Bank").val(),
        tgl_posting: "",
        no_posting: "",
        tgl_batal: "",
        keterangan: $("#Keterangan").val(),
        status: "",
        kd_buku_besar: "",
        Last_create_date: "",
        Last_created_by: "",
        Last_update_date: "",
        Last_updated_by: "",
        Program_name: "",
        no_do: "",
        jml_titipan1: $("#STransferGiro").val(),
        jml_titipan: $("#STransferTunai").val(),
        no_batal: "",
        detail: _GridDO.dataSource.data().toJSON()
    };

    swal({
        type: 'warning',
        title: 'Are you sure?',
        html: 'You want to submit this data',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d9534f'
    }).then(function (isConfirm) {
        if (isConfirm.value === true) {
            startSpinner('loading..', 1);
            $.ajax({
                type: "POST",
                data: savedata,
                url: urlSave,
                success: function (result) {
                    if (result.success === false) {
                        Swal.fire({
                            type: 'error',
                            title: 'Warning',
                            html: result.message
                        });
                        startSpinner('loading..', 0);
                    } else {
                        swal({
                            type: 'warning',
                            title: 'Apakah anda akan mencetak AR?',
                            html: '',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d9534f'
                        }).then(function (isConfirm) {
                            if (isConfirm.value === true) {
                                startSpinner('loading..', 1);

                                $.when(printSJNew(result.result)).done(function () {
                                    startSpinner('loading..', 0);
                                    window.location.href = urlCreate;
                                });
                            }
                            else {
                                window.location.href = urlCreate;
                            }
                        });
                    }
                }
            });
        }
    });



    /*var ppnval;
    if ($('#checkbox2').is(":checked")) {
        ppnval = "Y";
    }
    else {
        ppnval = "T";
    }
    if ($('#cb_ongkir').is(":checked")) {
        ex_jasa = "Y";
    }
    else {
        ex_jasa = "N";
    }
    var no = "";
    var urlSaveData
    if (Mode == "RETUR") {
        no = $("#DONumber").val();
        SP_REFFval = $("#RefNo1").val();
        urlSaveData = urlSaveRetur;
    }
    else if (Mode == "EDIT") {
        no = $("#DONumber").val();
        urlSaveData = urlEdit;
    }
    else {
        urlSaveData = urlSave;
    }
    var savedata = {
        No_sp: no,
        Jenis_sp: $("#jenisDO").val(),
        Kd_Customer: $("#Kd_Customer").val(),
        Atas_Nama: $("#Kd_Customer option:selected").text(),
        Tgl_sp: $("#tanggal").val(),
        Tgl_Kirim_Marketing: $("#tanggalkirim").val(),
        Kd_sales: $("#kasir").val(),
        Keterangan: $("#Keterangan").val(),
        Almt_pnrm: $("#AlamatKirim").val(),
        SP_REFF: $("#RefNo1").val(),
        SP_REFF2: $("#RefNo2").val(),
        JML_RP_TRANS: $("#TotalRupiah").val(),
        JML_VALAS_TRANS: $("#TotalRupiah").val(),
        Jatuh_Tempo: 0,
        Flag_Ppn: ppnval,
        inc_ongkir: ex_jasa,
        PPn: 0,
        dp: $("#dp").val(),
        Discount: $("#Diskon").val(),
        Biaya: $("#ongkir").val(),
        details: _GridDO.dataSource.data().toJSON()
    };

    swal({
        type: 'warning',
        title: 'Are you sure?',
        html: 'You want to submit this data',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d9534f'
    }).then(function (isConfirm) {
        if (isConfirm.value === true) {
            startSpinner('loading..', 1);
            $.ajax({
                type: "POST",
                data: savedata,
                url: urlSaveData,
                success: function (result) {
                    if (result.success === false) {
                        Swal.fire({
                            type: 'error',
                            title: 'Warning',
                            html: result.message
                        });
                        startSpinner('loading..', 0);
                    } else {

                        //Swal.fire({
                        //    type: 'success',
                        //    title: 'Success',
                        //    html: "Save Successfully"
                        //});
                        if (BranchID == "TOKO" || akses_penjualan == "CASH") {
                            $.when(printNotaNew(result.result)).done(function () {
                                startSpinner('loading..', 0);
                                if (Mode == "RETUR") {
                                    $.when(printNotaNew(SP_REFFval)).done(function () {
                                        swal({
                                            type: 'warning',
                                            title: 'Apakah anda akan mencetak SJ?',
                                            html: '',
                                            showCancelButton: true,
                                            confirmButtonColor: '#3085d6',
                                            cancelButtonColor: '#d9534f'
                                        }).then(function (isConfirm) {
                                            if (isConfirm.value === true) {
                                                startSpinner('loading..', 1);

                                                $.when(printSJNew(result.result)).done(function () {
                                                    startSpinner('loading..', 0);
                                                    window.location.href = urlCreate;
                                                });
                                            }
                                            else {
                                                window.location.href = urlCreate;
                                            }
                                        });
                                    });
                                }
                                else {
                                    swal({
                                        type: 'warning',
                                        title: 'Apakah anda akan mencetak SJ?',
                                        html: '',
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d9534f'
                                    }).then(function (isConfirm) {
                                        if (isConfirm.value === true) {
                                            startSpinner('loading..', 1);

                                            $.when(printSJNew(result.result)).done(function () {
                                                startSpinner('loading..', 0);
                                                window.location.href = urlCreate;
                                            });
                                        }
                                        else {
                                            window.location.href = urlCreate;
                                        }
                                    });
                                }

                            });
                        }
                        else {
                            startSpinner('loading..', 0);
                            window.location.href = urlCreate + '?id=' + result.result + '&mode=VIEW';
                        }


                    }
                },
                error: function (data) {
                    alert('Something Went Wrong');
                    startSpinner('loading..', 0);
                }
            });

        }
    });*/
}
